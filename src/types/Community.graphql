scalar JSON

type Community {
  id: String
  title: String
  short_description: String
  full_description: JSON
  images: [String]
  created_at: String
  updated_at: String

  events: [Event]
  tags: [Tag]
  location: Location
  founded_in: String
  links: [Link]
  members_quantity: Int
  organizers: [User]
}

# Community filters
input CommunityFilter {
  id: StringFilter
  title: StringFilter
  short_description: StringFilter
  founded_in: StringFilter
  members_quantity: IntFilter
  created_at: DateFilter
  updated_at: DateFilter
  tags: TagFilter
  location: LocationFilter
  organizers: UserFilter
  and: [CommunityFilter]
  or: [CommunityFilter]
}

# Community sort
input CommunitySort {
  id: SortOrder
  title: SortOrder
  short_description: SortOrder
  founded_in: SortOrder
  members_quantity: SortOrder
  created_at: SortOrder
  updated_at: SortOrder
}

# Paginated Community response
type PaginatedCommunities {
  data: [Community]
  meta: PaginationInfo
}

# Community queries
extend type Query {
  communities(
    filters: CommunityFilter
    sort: [CommunitySort]
    pagination: PaginationInput
    search: String
  ): PaginatedCommunities
  
  community(id: String!): Community
}